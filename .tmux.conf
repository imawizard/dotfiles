# General behaviour
set -gw mode-keys vi              # Enable vi keys for copy mode.
set -g mouse on                   # Enable mouse.
set -g repeat-time 750            # Wait time for repeated keys.
set -g renumber-windows on        # Automatically re-number windows when others are closed.
set -g status-interval 1          # Update the status line more frequently.
set -g focus-events on            # Request and forward focus events.
set -s escape-time 10             # Set shorter wait-time after escape key.
set -g default-terminal "tmux-256color"          # $TERM in tmux
set -sa terminal-overrides ',xterm-256color:RGB' # $TERM out of tmux
set -g pane-active-border-style fg=magenta

# Notifications
set -gw monitor-activity on
set -gw monitor-bell on
set -gw monitor-silence 10800

# Prefix-highlight settings
set -g @prefix_highlight_fg 'white'
set -g @prefix_highlight_bg 'black'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=brightyellow'
set -g @prefix_highlight_sync_mode_attr 'fg=white,bg=magenta'
set -g @prefix_highlight_prefix_prompt ' ^B '
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_output_prefix ' '
set -g @prefix_highlight_empty_prompt '      '

# Status line
set -g status-position top
set -g status-justify centre
set -g status-style "fg=white,bg=brightblue"
set -g status-left "#{prefix_highlight}"
set -g status-right "%d/%m %a %H:%M:%S "
set -g window-status-activity-style ""
set -g window-status-bell-style ""
set -g window-status-current-format "\
#[fg=black,bg=cyan] \
#I:\
#{?#{&&:#{!=:#{?#W,#W,#{pane_current_command}},#{pane_current_command}},#{!=:#W,[tmux]}},#[bold]#[underscore]#W#[none],\
#(v='#{pane_current_path}'; v=\${v/#\$HOME/'~'#}; echo \$(basename \"\$v\"))}\
|#{pane_current_command}\
#{?window_zoomed_flag, \uf848,} \
#[bg=default] \
"
set -g window-status-format "\
#I:\
#{?#{&&:#{!=:#{?#W,#W,#{pane_current_command}},#{pane_current_command}},#{!=:#W,[tmux]}},#[bold]#[underscore]#W#[none],\
#(v='#{pane_current_path}'; v=\${v/#\$HOME/'~'#}; echo \$(basename \"\$v\"))}\
|#{pane_current_command}\
#{?#{||:#{window_activity_flag},#{window_bell_flag}}, \uf59e,#{?window_silence_flag, \uf9b1,}} \
"

# 2nd status line
set -g status 2
set -g status-format[1] "\
#[align=right,fg=black,bg=brightgreen,fill=brightgreen]\
#(p='#{pane_current_path}'; p=\${p/#\$HOME/'~'}; echo \$p) \
"

# Opt-in remaps
if-shell "[[ $(env | grep \"^TMUX_CUSTOM_KEYBINDS=\") ]]" {

# Use key bindings similiar to vim's splits.
bind c confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind w select-pane -t :.+
bind > run "tmux resize-pane -x $(( $(tmux display -p '#{pane_width}+4') ))"
bind < run "tmux resize-pane -x $(( $(tmux display -p '#{pane_width}-4') ))"
bind + run "tmux resize-pane -y $(( $(tmux display -p '#{pane_height}+4') ))"
bind - run "tmux resize-pane -y $(( $(tmux display -p '#{pane_height}-4') ))"

# Use key bindings similiar to vim's tabs.
set -s command-alias[100] tabnew='new-window -c "#{pane_current_path}"'
bind t next-window
bind T previous-window

# Use jk to cycle through panes (counter-)clockwise and JK to swap them.
bind j select-pane -t :.+
bind k select-pane -t :.-
bind J select-pane -t :.+ \; swap-pane -t :.-
bind K select-pane -t :.- \; swap-pane -t :.+

# Send current pane to another window.
bind S command-prompt -p "Send current pane to [session:]window:" "break-pane ; join-pane -h -t '%%'"

# Show a tree containing sessions and windows.
bind W choose-tree -Z

# Make `copy mode` a bit more vim-like.
bind -T copy-mode-vi v send-keys -X begin-selection     # Start selection with v.
bind -T copy-mode-vi _ send-keys -X back-to-indentation # Make _ the same as ^.
bind -T copy-mode-vi y send-keys "Enter"                # Copy and exit with y.
bind -T copy-mode-vi i send-keys "q"                    # Leave visual mode with i.

}

# Make C-b repeatable.
bind -r C-b send-keys "C-b"

# Use win32yank for pasting in WSL.
if-shell "[ $(uname -r | grep -i -- -WSL) ]" {

bind-key ] run "win32yank.exe -o | tmux load-buffer - && tmux paste-buffer"

}

# Open or reload config.
set -s command-alias[101] Reload='source-file ~/.tmux.conf; display-message "~/.tmux.conf reloaded"'
set -s command-alias[102] Editrc='new-window "nvim ~/.tmux.conf"'

# Plugins
set -g @plugin "tmux-plugins/tpm"                   # Plugin manager
set -g @plugin "tmux-plugins/tmux-sensible"         # Sensible defaults
set -g @plugin "tmux-plugins/tmux-prefix-highlight" # Show when prefix was hit

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.tmux/plugins/tpm/tpm"
